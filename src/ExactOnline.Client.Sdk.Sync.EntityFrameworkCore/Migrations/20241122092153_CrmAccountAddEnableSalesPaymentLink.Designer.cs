// <auto-generated />
using System;
using ExactOnline.Client.Sdk.Sync.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExactOnline.Client.Sdk.Sync.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(EntityFrameworkCoreDbContext))]
    [Migration("20241122092153_CrmAccountAddEnableSalesPaymentLink")]
    partial class CrmAccountAddEnableSalesPaymentLink
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExactOnline.Client.Models.Accountancy.AccountInvolvedAccount", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("InvolvedAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InvolvedAccountRelationTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InvolvedAccountRelationTypeDescriptionTermId")
                        .HasColumnType("int");

                    b.Property<short?>("InvolvedAccountRelationTypeId")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AccountInvolvedAccount");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Accountancy.AccountOwner", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OwnerAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OwnerAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Shares")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("AccountOwner");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Accountancy.InvolvedUser", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("AccountIsSupplier")
                        .HasColumnType("bit");

                    b.Property<string>("AccountLogoThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("InvolvedUserRole")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InvolvedUserRoleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsMainContact")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonPhoneExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonPictureThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserFullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("InvolvedUser");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Accountancy.InvolvedUserRole", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DescriptionTermID")
                        .HasColumnType("int");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("InvolvedUserRole");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Accountancy.SolutionLink", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Account")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("ExternalSolutionCode")
                        .HasColumnType("int");

                    b.Property<string>("ExternalSolutionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalSolutionUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InternalSolutionDivision")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherExternalSolutionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SolutionType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("ID");

                    b.ToTable("SolutionLink");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Accountancy.TaskType", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DescriptionTermID")
                        .HasColumnType("int");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TaskType");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Activities.CommunicationNote", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Campaign")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CampaignDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Contact")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocumentSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Opportunity")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OpportunityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserFullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CommunicationNote");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Activities.Complaint", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AssignedTo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AssignedToFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComplaintName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Contact")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocumentSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NextAction")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReceiptDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Complaint");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Activities.Event", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Campaign")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CampaignDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Contact")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocumentSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Opportunity")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OpportunityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserFullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Activities.ServiceRequest", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AssignedTo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AssignedToFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Contact")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocumentSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NextAction")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReceiptDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ServiceRequest");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Activities.Task", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Contact")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CustomTaskType")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocumentSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Opportunity")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OpportunityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TaskType")
                        .HasColumnType("int");

                    b.Property<string>("TaskTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserFullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Task");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Assets.Asset", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("AlreadyDepreciated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<Guid?>("AssetFrom")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AssetFromDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AssetGroup")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AssetGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetGroupDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CatalogueValue")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Costcenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostcenterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Costunit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostunitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DeductionPercentage")
                        .HasColumnType("float");

                    b.Property<double?>("DepreciatedAmount")
                        .HasColumnType("float");

                    b.Property<int?>("DepreciatedPeriods")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DepreciatedStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("EngineEmission")
                        .HasColumnType("smallint");

                    b.Property<short?>("EngineType")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("GLTransactionLine")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLTransactionLineDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("InvestmentAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InvestmentAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvestmentAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("InvestmentAmountDC")
                        .HasColumnType("float");

                    b.Property<double?>("InvestmentAmountFC")
                        .HasColumnType("float");

                    b.Property<string>("InvestmentCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvestmentCurrencyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InvestmentDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("InvestmentDeduction")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Parent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ParentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PictureFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PrimaryMethod")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PrimaryMethodCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryMethodDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ResidualValue")
                        .HasColumnType("float");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("TransactionEntryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("TransactionEntryNo")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Asset");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Assets.AssetGroup", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DepreciationMethod")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DepreciationMethodCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepreciationMethodDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("GLAccountAssets")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLAccountAssetsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountAssetsDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GLAccountDepreciationBS")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLAccountDepreciationBSCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountDepreciationBSDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GLAccountDepreciationPL")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLAccountDepreciationPLCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountDepreciationPLDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GLAccountRevaluationBS")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLAccountRevaluationBSCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountRevaluationBSDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AssetGroup");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Assets.DepreciationMethod", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepreciationInterval")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<double?>("MaxPercentage")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Percentage")
                        .HasColumnType("float");

                    b.Property<double?>("Percentage2")
                        .HasColumnType("float");

                    b.Property<short?>("Periods")
                        .HasColumnType("smallint");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("TypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Years")
                        .HasColumnType("smallint");

                    b.HasKey("ID");

                    b.ToTable("DepreciationMethod");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Budget.Budget", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("AmountDC")
                        .HasColumnType("float");

                    b.Property<Guid?>("BudgetScenario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BudgetScenarioCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BudgetScenarioDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Costcenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostcenterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Costunit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostunitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("GLAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("HID")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("ReportingPeriod")
                        .HasColumnType("smallint");

                    b.Property<short?>("ReportingYear")
                        .HasColumnType("smallint");

                    b.HasKey("ID");

                    b.ToTable("Budget");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.CRM.Account", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountManager")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountManagerFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AccountManagerHID")
                        .HasColumnType("int");

                    b.Property<Guid?>("Accountant")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ActivitySector")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ActivitySubSector")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("BRIN")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Blocked")
                        .HasColumnType("bit");

                    b.Property<Guid?>("BusinessType")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("CanDropShip")
                        .HasColumnType("bit");

                    b.Property<string>("ChamberOfCommerce")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Classification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Classification1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Classification2")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Classification3")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Classification4")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Classification5")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Classification6")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Classification7")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Classification8")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassificationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeAtSupplier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CompanySize")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte?>("ConsolidationScenario")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("ControlledDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("CostPaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<string>("Costcenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostcenterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CreditLinePurchase")
                        .HasColumnType("float");

                    b.Property<double?>("CreditLineSales")
                        .HasColumnType("float");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CustomerSince")
                        .HasColumnType("datetime2");

                    b.Property<string>("DatevCreditorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DatevDebtorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DiscountPurchase")
                        .HasColumnType("float");

                    b.Property<double?>("DiscountSales")
                        .HasColumnType("float");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DunsNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("EnableSalesPaymentLink")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EstablishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GLAP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GLAR")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GLAccountPurchase")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GLAccountSales")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GlnNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HasWithholdingTaxSales")
                        .HasColumnType("bit");

                    b.Property<bool>("IgnoreDatevWarningMessage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("IntraStatArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntraStatDeliveryTerm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntraStatSystem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntraStatTransactionA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntraStatTransactionB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntraStatTransportMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("InvoiceAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InvoiceAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InvoiceAttachmentType")
                        .HasColumnType("int");

                    b.Property<int?>("InvoicingMethod")
                        .HasColumnType("int");

                    b.Property<byte>("IsAccountant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("IsAgency")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("IsAnonymised")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<bool?>("IsBank")
                        .HasColumnType("bit");

                    b.Property<byte>("IsCompetitor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<bool?>("IsExtraDuty")
                        .HasColumnType("bit");

                    b.Property<byte>("IsMailing")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<bool?>("IsMember")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPilot")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPurchase")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsReseller")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSales")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSupplier")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<Guid?>("LeadPurpose")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LeadSource")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Logo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("LogoFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<Guid?>("MainContact")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OINNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Parent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PayAsYouEarn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentConditionPurchase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentConditionPurchaseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentConditionSales")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentConditionSalesDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PriceList")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PurchaseCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseCurrencyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PurchaseLeadDays")
                        .HasColumnType("int");

                    b.Property<string>("PurchaseVATCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseVATCodeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RSIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RecepientOfCommissions")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Reseller")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ResellerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResellerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesCurrencyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SalesTaxSchedule")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SalesTaxScheduleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesTaxScheduleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesVATCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesVATCodeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SecurityLevel")
                        .HasColumnType("int");

                    b.Property<byte>("SeparateInvPerProject")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("SeparateInvPerSubscription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<int?>("ShippingLeadDays")
                        .HasColumnType("int");

                    b.Property<Guid?>("ShippingMethod")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StatusSince")
                        .HasColumnType("datetime2");

                    b.Property<long>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<string>("TradeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueTaxpayerReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VATLiability")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VATNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.CRM.AccountClass", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreditManagementScenario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AccountClass");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.CRM.AccountClassification", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountClassificationName")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountClassificationNameDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AccountClassification");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.CRM.AccountClassificationName", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SequenceNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("ID");

                    b.ToTable("AccountClassificationName");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.CRM.Address", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("AccountIsSupplier")
                        .HasColumnType("bit");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Contact")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("FreeBoolField_01")
                        .HasColumnType("bit");

                    b.Property<bool?>("FreeBoolField_02")
                        .HasColumnType("bit");

                    b.Property<bool?>("FreeBoolField_03")
                        .HasColumnType("bit");

                    b.Property<bool?>("FreeBoolField_04")
                        .HasColumnType("bit");

                    b.Property<bool?>("FreeBoolField_05")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FreeDateField_01")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FreeDateField_02")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FreeDateField_03")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FreeDateField_04")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FreeDateField_05")
                        .HasColumnType("datetime2");

                    b.Property<double?>("FreeNumberField_01")
                        .HasColumnType("float");

                    b.Property<double?>("FreeNumberField_02")
                        .HasColumnType("float");

                    b.Property<double?>("FreeNumberField_03")
                        .HasColumnType("float");

                    b.Property<double?>("FreeNumberField_04")
                        .HasColumnType("float");

                    b.Property<double?>("FreeNumberField_05")
                        .HasColumnType("float");

                    b.Property<string>("FreeTextField_01")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeTextField_02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeTextField_03")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeTextField_04")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeTextField_05")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mailbox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Main")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NicNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<short?>("Type")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.CRM.AddressState", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("float");

                    b.Property<double?>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AddressState");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.CRM.BankAccount", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BICCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Bank")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankAccountHolderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<string>("Format")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IBAN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Main")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PaymentServiceAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("BankAccount");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.CRM.Contact", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AccountIsCustomer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool?>("AccountIsSupplier")
                        .HasColumnType("bit");

                    b.Property<Guid?>("AccountMainContact")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressStreetNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressStreetNumberSuffix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AllowMailing")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BirthName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthNamePrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessFax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessPhoneExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IdentificationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("IdentificationDocument")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdentificationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("IsAnonymised")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<bool?>("IsMailingExcluded")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMainContact")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LeadPurpose")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LeadSource")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MarketingNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartnerNamePrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Person")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PictureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialSecurityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleAbbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.CRM.DocumentsAttachment", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttachmentFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AttachmentFileSize")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("AttachmentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CanShowInWebView")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("ID");

                    b.ToTable("DocumentsAttachment");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.CRM.HostingOpportunity", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Accountant")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountantCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("AmountDC")
                        .HasColumnType("float");

                    b.Property<double?>("AmountFC")
                        .HasColumnType("float");

                    b.Property<DateTime?>("BackToLeadDevelopment")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Campaign")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CampaignDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Channel")
                        .HasColumnType("smallint");

                    b.Property<string>("ChannelDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerDemandsDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DecisionMakingUnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DecisionMakingUnitRole")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DecisionTimeframe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DispatchToSales")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<byte?>("IsAssociatedPrice")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsCustomerDemandsMeet")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("LeadDeveloper")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LeadSource")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LeadSourceDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("OpportunityDepartmentCode")
                        .HasColumnType("smallint");

                    b.Property<string>("OpportunityDepartmentDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OpportunityStage")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OpportunityStageDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OpportunityStatus")
                        .HasColumnType("int");

                    b.Property<short?>("OpportunityType")
                        .HasColumnType("smallint");

                    b.Property<string>("OpportunityTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OwnerFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Probability")
                        .HasColumnType("float");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("RateFC")
                        .HasColumnType("float");

                    b.Property<string>("ReasonBack")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ReasonCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReasonCodeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Reseller")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ResellerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResellerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SalesType")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SalesTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("HostingOpportunity");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.CRM.Opportunity", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Accountant")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountantCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("AmountDC")
                        .HasColumnType("float");

                    b.Property<double?>("AmountFC")
                        .HasColumnType("float");

                    b.Property<Guid?>("Campaign")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CampaignDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Channel")
                        .HasColumnType("smallint");

                    b.Property<string>("ChannelDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("LeadSource")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LeadSourceDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("OpportunityDepartmentCode")
                        .HasColumnType("smallint");

                    b.Property<string>("OpportunityDepartmentDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OpportunityStage")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OpportunityStageDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OpportunityStatus")
                        .HasColumnType("int");

                    b.Property<short?>("OpportunityType")
                        .HasColumnType("smallint");

                    b.Property<string>("OpportunityTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Owner")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OwnerFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Probability")
                        .HasColumnType("float");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("RateFC")
                        .HasColumnType("float");

                    b.Property<Guid?>("ReasonCode")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReasonCodeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Reseller")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ResellerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResellerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SalesType")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SalesTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Opportunity");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.CRM.OpportunityContact", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AccountIsCustomer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool?>("AccountIsSupplier")
                        .HasColumnType("bit");

                    b.Property<Guid?>("AccountMainContact")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressStreetNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressStreetNumberSuffix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AllowMailing")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BirthName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthNamePrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessFax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessPhoneExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Contact")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("IdentificationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("IdentificationDocument")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdentificationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("IsAnonymised")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<bool?>("IsMailingExcluded")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMainContact")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Opportunity")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PartnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartnerNamePrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Person")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Picture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PictureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialSecurityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("OpportunityContact");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.CRM.Quotation", b =>
                {
                    b.Property<Guid>("QuotationID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AmountDC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("AmountDiscount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("AmountDiscountExclVat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("AmountFC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<DateTime?>("CloseDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeliveryAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeliveryAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeliveryAccountContact")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeliveryAccountContactFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeliveryAddress")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocumentSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InvoiceAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InvoiceAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("InvoiceAccountContact")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InvoiceAccountContactFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Opportunity")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OpportunityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrderAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OrderAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OrderAccountContact")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OrderAccountContactFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentConditionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("QuotationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuotationNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SalesPerson")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SalesPersonFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ShippingMethod")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ShippingMethodDescription")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("VATAmountFC")
                        .HasColumnType("float");

                    b.Property<int>("VersionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("YourRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuotationID");

                    b.ToTable("Quotation");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.CRM.QuotationLine", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AmountDC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("AmountFC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double?>("NetPrice")
                        .HasColumnType("float");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<Guid>("QuotationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<int>("QuotationNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("UnitCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("UnitPrice")
                        .HasColumnType("float");

                    b.Property<double?>("VATAmountFC")
                        .HasColumnType("float");

                    b.Property<string>("VATCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VATDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("VATPercentage")
                        .HasColumnType("float");

                    b.Property<int>("VersionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("ID");

                    b.ToTable("QuotationLine");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.CRM.ReasonCode", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte?>("Active")
                        .HasColumnType("tinyint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint");

                    b.Property<string>("TypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ReasonCode");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Cashflow.Bank", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BICCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Format")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomePageAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Bank");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Cashflow.DirectDebitMandate", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BankAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CancellationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<byte?>("FirstSend")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("Main")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("PaymentType")
                        .HasColumnType("smallint");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SignatureDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("ID");

                    b.ToTable("DirectDebitMandate");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Cashflow.ImportNotification", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("BankAccountID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short?>("Result")
                        .HasColumnType("smallint");

                    b.Property<string>("ResultDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RetriedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("RetriedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("ImportNotification");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Cashflow.ImportNotificationDetail", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CashflowImportNotification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<Guid?>("CashflowTransactionFeed")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("ResponseCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.Property<string>("ResponseCodeArguments")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ImportNotificationDetail");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Cashflow.Payment", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountBankAccountID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountBankAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AccountContact")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AmountDC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("AmountDiscountDC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("AmountDiscountFC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("AmountFC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid?>("BankAccountID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CashflowTransactionBatchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DiscountDueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DocumentNumber")
                        .HasColumnType("int");

                    b.Property<string>("DocumentSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("EndPeriod")
                        .HasColumnType("smallint");

                    b.Property<short?>("EndYear")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EntryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("EntryNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("GLAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InvoiceNumber")
                        .HasColumnType("int");

                    b.Property<byte?>("IsBatchBooking")
                        .HasColumnType("tinyint");

                    b.Property<string>("Journal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JournalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentBatchNumber")
                        .HasColumnType("int");

                    b.Property<string>("PaymentCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentConditionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentDays")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentDaysDiscount")
                        .HasColumnType("int");

                    b.Property<double?>("PaymentDiscountPercentage")
                        .HasColumnType("float");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PaymentSelected")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("PaymentSelector")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PaymentSelectorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("RateFC")
                        .HasColumnType("float");

                    b.Property<int>("Source")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<double>("TransactionAmountDC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("TransactionAmountFC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<DateTime?>("TransactionDueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TransactionEntryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TransactionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TransactionIsReversal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<short?>("TransactionReportingPeriod")
                        .HasColumnType("smallint");

                    b.Property<short?>("TransactionReportingYear")
                        .HasColumnType("smallint");

                    b.Property<short?>("TransactionStatus")
                        .HasColumnType("smallint");

                    b.Property<int?>("TransactionType")
                        .HasColumnType("int");

                    b.Property<string>("YourRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Cashflow.PaymentCondition", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CreditManagementScenario")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreditManagementScenarioCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreditManagementScenarioDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscountCalculation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DiscountPaymentDays")
                        .HasColumnType("int");

                    b.Property<double?>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentDays")
                        .HasColumnType("int");

                    b.Property<string>("PaymentDiscountType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentEndOfMonths")
                        .HasColumnType("int");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Percentage")
                        .HasColumnType("float");

                    b.Property<string>("VATCalculation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PaymentCondition");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Cashflow.Receivable", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccountBankAccountID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountBankAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AccountContact")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AmountDC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("AmountDiscountDC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("AmountDiscountFC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("AmountFC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid?>("BankAccountID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CashflowTransactionBatchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DirectDebitMandate")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DirectDebitMandateDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("DirectDebitMandatePaymentType")
                        .HasColumnType("smallint");

                    b.Property<string>("DirectDebitMandateReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("DirectDebitMandateType")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("DiscountDueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DocumentNumber")
                        .HasColumnType("int");

                    b.Property<string>("DocumentSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("EndPeriod")
                        .HasColumnType("smallint");

                    b.Property<string>("EndToEndID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("EndYear")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EntryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("EntryNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("GLAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InvoiceNumber")
                        .HasColumnType("int");

                    b.Property<byte?>("IsBatchBooking")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsFullyPaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Journal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JournalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastPaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentConditionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentDays")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentDaysDiscount")
                        .HasColumnType("int");

                    b.Property<double?>("PaymentDiscountPercentage")
                        .HasColumnType("float");

                    b.Property<string>("PaymentInformationID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("RateFC")
                        .HasColumnType("float");

                    b.Property<int?>("ReceivableBatchNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReceivableSelected")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ReceivableSelector")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReceivableSelectorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Source")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<double>("TransactionAmountDC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("TransactionAmountFC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<DateTime?>("TransactionDueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TransactionEntryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TransactionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TransactionIsReversal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<short?>("TransactionReportingPeriod")
                        .HasColumnType("smallint");

                    b.Property<short?>("TransactionReportingYear")
                        .HasColumnType("smallint");

                    b.Property<short?>("TransactionStatus")
                        .HasColumnType("smallint");

                    b.Property<int?>("TransactionType")
                        .HasColumnType("int");

                    b.Property<string>("YourRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Receivable");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Current.Me", b =>
                {
                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CurrentDivision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("DivisionCustomer")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DivisionCustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivisionCustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Legislation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServerTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ServerUtcOffset")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<byte[]>("ThumbnailPicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ThumbnailPictureFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Me");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Documents.Document", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("AmountFC")
                        .HasColumnType("float");

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Category")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Contact")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("DocumentDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DocumentFolder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocumentFolderCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentFolderDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentViewUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FinancialTransactionEntryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("HID")
                        .HasColumnType("int");

                    b.Property<bool>("HasEmptyBody")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Opportunity")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SalesInvoiceNumber")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOrderNumber")
                        .HasColumnType("int");

                    b.Property<int?>("SendMethod")
                        .HasColumnType("int");

                    b.Property<int?>("ShopOrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("TypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Documents.DocumentAttachment", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Attachment")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("Document")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FileSize")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<long>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("DocumentAttachment");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Documents.DocumentCategory", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("DocumentCategory");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Documents.DocumentFolder", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentFolder")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("DocumentFolder");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Documents.DocumentType", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DocumentIsCreatable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("DocumentIsDeletable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("DocumentIsUpdatable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("DocumentIsViewable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TypeCategory")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("DocumentType");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Documents.DocumentTypeCategory", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("DocumentTypeCategory");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Documents.DocumentTypeFolder", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("DocumentFolder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<int>("DocumentType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("DocumentTypeFolder");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Financial.AgingOverview", b =>
                {
                    b.Property<int>("AgeGroup")
                        .HasColumnType("int");

                    b.Property<string>("AgeGroupDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AmountPayable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("AmountReceivable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AgeGroup");

                    b.ToTable("AgingOverview");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Financial.AgingPayablesList", b =>
                {
                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AgeGroup1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double>("AgeGroup1Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("AgeGroup1Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AgeGroup2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double>("AgeGroup2Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("AgeGroup2Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AgeGroup3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double>("AgeGroup3Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("AgeGroup3Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AgeGroup4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double>("AgeGroup4Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("AgeGroup4Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.HasKey("AccountId");

                    b.ToTable("AgingPayablesList");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Financial.AgingReceivablesList", b =>
                {
                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AgeGroup1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double>("AgeGroup1Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("AgeGroup1Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AgeGroup2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double>("AgeGroup2Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("AgeGroup2Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AgeGroup3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double>("AgeGroup3Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("AgeGroup3Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AgeGroup4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double>("AgeGroup4Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("AgeGroup4Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.HasKey("AccountId");

                    b.ToTable("AgingReceivablesList");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Financial.ExchangeRate", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Rate")
                        .HasColumnType("float");

                    b.Property<string>("SourceCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceCurrencyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TargetCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetCurrencyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ExchangeRate");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Financial.FinancialPeriod", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("FinPeriod")
                        .HasColumnType("smallint");

                    b.Property<short?>("FinYear")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("FinancialPeriod");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Financial.GLAccount", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short?>("AssimilatedVATBox")
                        .HasColumnType("smallint");

                    b.Property<string>("BalanceSide")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BalanceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BelcotaxType")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Compress")
                        .HasColumnType("bit");

                    b.Property<string>("Costcenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostcenterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Costunit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostunitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<byte>("ExcludeVATListing")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<double?>("ExpenseNonDeductiblePercentage")
                        .HasColumnType("float");

                    b.Property<bool?>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<bool?>("Matching")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PrivateGLAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("PrivatePercentage")
                        .HasColumnType("float");

                    b.Property<string>("ReportingCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RevalueCurrency")
                        .HasColumnType("bit");

                    b.Property<string>("SearchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("TypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("UseCostcenter")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("UseCostunit")
                        .HasColumnType("tinyint");

                    b.Property<string>("VATCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VATDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VATGLAccountType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("VATNonDeductibleGLAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("VATNonDeductiblePercentage")
                        .HasColumnType("float");

                    b.Property<string>("VATSystem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("YearEndCostGLAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("YearEndReflectionGLAccount")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("GLAccount");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Financial.GLClassification", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Abstract")
                        .HasColumnType("bit");

                    b.Property<string>("Balance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<bool?>("IsTupleSubElement")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Nillable")
                        .HasColumnType("bit");

                    b.Property<Guid?>("Parent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PeriodType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubstitutionGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TaxonomyNamespace")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TaxonomyNamespaceDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<Guid?>("Type")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("GLClassification");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Financial.GLScheme", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<byte>("Main")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetNamespace")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("GLScheme");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Financial.GLTransactionType", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionSuffix")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("GLTransactionType");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Financial.Journal", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("AllowVAT")
                        .HasColumnType("bit");

                    b.Property<bool?>("AllowVariableCurrency")
                        .HasColumnType("bit");

                    b.Property<bool?>("AllowVariableExchangeRate")
                        .HasColumnType("bit");

                    b.Property<bool?>("AutoSave")
                        .HasColumnType("bit");

                    b.Property<Guid?>("Bank")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankAccountBICCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankAccountIBAN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("BankAccountID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankAccountIncludingMask")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("BankAccountUseSEPA")
                        .HasColumnType("bit");

                    b.Property<bool?>("BankAccountUseSepaDirectDebit")
                        .HasColumnType("bit");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("GLAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GLAccountType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PaymentInTransitAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PaymentServiceAccountIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaymentServiceProvider")
                        .HasColumnType("int");

                    b.Property<string>("PaymentServiceProviderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Journal");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Financial.JournalStatusList", b =>
                {
                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<string>("Journal")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("JournalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JournalType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("JournalTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Year", "Period", "Journal");

                    b.ToTable("JournalStatusList");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Financial.OfficialReturn", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocumentSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Frequency")
                        .HasColumnType("smallint");

                    b.Property<byte?>("IsCorrection")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Period")
                        .HasColumnType("smallint");

                    b.Property<string>("PresentationData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PresentationDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("PresentationFile")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PresentationFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Source")
                        .HasColumnType("smallint");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint");

                    b.Property<string>("TypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Year")
                        .HasColumnType("smallint");

                    b.HasKey("ID");

                    b.ToTable("OfficialReturn");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Financial.OutstandingInvoicesOverview", b =>
                {
                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("OutstandingPayableInvoiceAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("OutstandingPayableInvoiceCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("OutstandingReceivableInvoiceAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("OutstandingReceivableInvoiceCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("OverduePayableInvoiceAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("OverduePayableInvoiceCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("OverdueReceivableInvoiceAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("OverdueReceivableInvoiceCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.HasKey("CurrencyCode");

                    b.ToTable("OutstandingInvoicesOverview");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Financial.PayablesList", b =>
                {
                    b.Property<long>("HID")
                        .HasColumnType("bigint");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("AmountInTransit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<int>("EntryNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<DateTime>("InvoiceDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<int>("InvoiceNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("JournalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JournalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YourRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HID");

                    b.ToTable("PayablesList");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Financial.ProfitLossOverview", b =>
                {
                    b.Property<int>("CurrentYear")
                        .HasColumnType("int");

                    b.Property<double>("CostsCurrentPeriod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("CostsCurrentYear")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("CostsPreviousYear")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("CostsPreviousYearPeriod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CurrentPeriod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("PreviousYear")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("PreviousYearPeriod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double>("ResultCurrentPeriod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("ResultCurrentYear")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("ResultPreviousYear")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("ResultPreviousYearPeriod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("RevenueCurrentPeriod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("RevenueCurrentYear")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("RevenuePreviousYear")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("RevenuePreviousYearPeriod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.HasKey("CurrentYear");

                    b.ToTable("ProfitLossOverview");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Financial.ReceivablesList", b =>
                {
                    b.Property<long>("HID")
                        .HasColumnType("bigint");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("AmountInTransit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<int>("EntryNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<DateTime>("InvoiceDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<int>("InvoiceNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("JournalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JournalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YourRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HID");

                    b.ToTable("ReceivablesList");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Financial.ReportingBalance", b =>
                {
                    b.Property<long>("ID")
                        .HasColumnType("bigint");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<double?>("AmountCredit")
                        .HasColumnType("float");

                    b.Property<double?>("AmountDebit")
                        .HasColumnType("float");

                    b.Property<string>("BalanceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenterCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnitCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Count")
                        .HasColumnType("int");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("GLAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReportingPeriod")
                        .HasColumnType("int");

                    b.Property<int?>("ReportingYear")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ReportingBalance");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Financial.Return", b =>
                {
                    b.Property<Guid>("DocumentID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentViewUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayrollDeclarationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Period")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("PeriodDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Request")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Year")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("DocumentID");

                    b.ToTable("Return");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Financial.RevenueList", b =>
                {
                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.HasKey("Year", "Period");

                    b.ToTable("RevenueList");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.FinancialTransaction.BankEntry", b =>
                {
                    b.Property<Guid>("EntryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BankStatementDocument")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BankStatementDocumentNumber")
                        .HasColumnType("int");

                    b.Property<string>("BankStatementDocumentSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ClosingBalanceFC")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<int?>("EntryNumber")
                        .HasColumnType("int");

                    b.Property<short?>("FinancialPeriod")
                        .HasColumnType("smallint");

                    b.Property<short?>("FinancialYear")
                        .HasColumnType("smallint");

                    b.Property<string>("JournalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JournalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<double?>("OpeningBalanceFC")
                        .HasColumnType("float");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntryID");

                    b.ToTable("BankEntry");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.FinancialTransaction.BankEntryLine", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("AmountDC")
                        .HasColumnType("float");

                    b.Property<double?>("AmountFC")
                        .HasColumnType("float");

                    b.Property<double?>("AmountVATFC")
                        .HasColumnType("float");

                    b.Property<Guid?>("Asset")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AssetCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DocumentNumber")
                        .HasColumnType("int");

                    b.Property<string>("DocumentSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EntryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("EntryNumber")
                        .HasColumnType("int");

                    b.Property<double?>("ExchangeRate")
                        .HasColumnType("float");

                    b.Property<Guid?>("GLAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OffsetID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("OurRef")
                        .HasColumnType("int");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("VATCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VATCodeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("VATPercentage")
                        .HasColumnType("float");

                    b.Property<string>("VATType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("BankEntryLine");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.FinancialTransaction.CashEntry", b =>
                {
                    b.Property<Guid>("EntryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ClosingBalanceFC")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<int?>("EntryNumber")
                        .HasColumnType("int");

                    b.Property<short?>("FinancialPeriod")
                        .HasColumnType("smallint");

                    b.Property<short?>("FinancialYear")
                        .HasColumnType("smallint");

                    b.Property<string>("JournalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JournalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<double?>("OpeningBalanceFC")
                        .HasColumnType("float");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntryID");

                    b.ToTable("CashEntry");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.FinancialTransaction.CashEntryLine", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("AmountDC")
                        .HasColumnType("float");

                    b.Property<double?>("AmountFC")
                        .HasColumnType("float");

                    b.Property<double?>("AmountVATFC")
                        .HasColumnType("float");

                    b.Property<Guid?>("Asset")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AssetCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DocumentNumber")
                        .HasColumnType("int");

                    b.Property<string>("DocumentSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EntryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("EntryNumber")
                        .HasColumnType("int");

                    b.Property<double?>("ExchangeRate")
                        .HasColumnType("float");

                    b.Property<Guid?>("GLAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OffsetID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("OurRef")
                        .HasColumnType("int");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("VATCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VATCodeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("VATPercentage")
                        .HasColumnType("float");

                    b.Property<string>("VATType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("CashEntryLine");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.FinancialTransaction.Transaction", b =>
                {
                    b.Property<Guid>("EntryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ClosingBalanceFC")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DocumentNumber")
                        .HasColumnType("int");

                    b.Property<string>("DocumentSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EntryNumber")
                        .HasColumnType("int");

                    b.Property<string>("ExternalLinkDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalLinkReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("FinancialPeriod")
                        .HasColumnType("smallint");

                    b.Property<short?>("FinancialYear")
                        .HasColumnType("smallint");

                    b.Property<bool?>("IsExtraDuty")
                        .HasColumnType("bit");

                    b.Property<string>("JournalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JournalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<double?>("OpeningBalanceFC")
                        .HasColumnType("float");

                    b.Property<string>("PaymentConditionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentConditionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("TypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntryID");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.FinancialTransaction.TransactionLine", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AmountDC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("AmountFC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("AmountVATBaseFC")
                        .HasColumnType("float");

                    b.Property<double?>("AmountVATFC")
                        .HasColumnType("float");

                    b.Property<Guid?>("Asset")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AssetCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DocumentNumber")
                        .HasColumnType("int");

                    b.Property<string>("DocumentSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("EntryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("EntryNumber")
                        .HasColumnType("int");

                    b.Property<double?>("ExchangeRate")
                        .HasColumnType("float");

                    b.Property<double?>("ExtraDutyAmountFC")
                        .HasColumnType("float");

                    b.Property<double?>("ExtraDutyPercentage")
                        .HasColumnType("float");

                    b.Property<short?>("FinancialPeriod")
                        .HasColumnType("smallint");

                    b.Property<short?>("FinancialYear")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("GLAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InvoiceNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JournalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JournalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("int");

                    b.Property<short>("LineType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OffsetID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<double?>("PaymentDiscountAmount")
                        .HasColumnType("float");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("Subscription")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubscriptionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<string>("TrackingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrackingNumberDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("VATCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VATCodeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("VATPercentage")
                        .HasColumnType("float");

                    b.Property<string>("VATType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YourRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TransactionLine");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.General.Currency", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("AmountPrecision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<double>("PricePrecision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.HasKey("Code");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.GeneralJournalEntry.GeneralJournalEntry", b =>
                {
                    b.Property<Guid>("EntryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<int?>("EntryNumber")
                        .HasColumnType("int");

                    b.Property<double?>("ExchangeRate")
                        .HasColumnType("float");

                    b.Property<short?>("FinancialPeriod")
                        .HasColumnType("smallint");

                    b.Property<short?>("FinancialYear")
                        .HasColumnType("smallint");

                    b.Property<string>("JournalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JournalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Reversal")
                        .HasColumnType("bit");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("TypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntryID");

                    b.ToTable("GeneralJournalEntry");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.GeneralJournalEntry.GeneralJournalEntryLine", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("AmountDC")
                        .HasColumnType("float");

                    b.Property<double?>("AmountFC")
                        .HasColumnType("float");

                    b.Property<double?>("AmountVATDC")
                        .HasColumnType("float");

                    b.Property<double?>("AmountVATFC")
                        .HasColumnType("float");

                    b.Property<Guid?>("Asset")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AssetCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DocumentNumber")
                        .HasColumnType("int");

                    b.Property<string>("DocumentSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EntryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("EntryNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("GLAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OffsetID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("OurRef")
                        .HasColumnType("int");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<double?>("VATBaseAmountDC")
                        .HasColumnType("float");

                    b.Property<double?>("VATBaseAmountFC")
                        .HasColumnType("float");

                    b.Property<string>("VATCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VATCodeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("VATPercentage")
                        .HasColumnType("float");

                    b.Property<string>("VATType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("GeneralJournalEntryLine");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.HRM.AbsenceRegistration", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short?>("Cause")
                        .HasColumnType("smallint");

                    b.Property<string>("CauseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CauseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("Employee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("EmployeeFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeHID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<short?>("Kind")
                        .HasColumnType("smallint");

                    b.Property<string>("KindCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KindDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AbsenceRegistration");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.HRM.AbsenceRegistrationTransaction", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AbsenceRegistration")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpectedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Hours")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("HoursFirstDay")
                        .HasColumnType("float");

                    b.Property<double?>("HoursLastDay")
                        .HasColumnType("float");

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NotificationMoment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<double>("PercentageDisablement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<short>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.HasKey("ID");

                    b.ToTable("AbsenceRegistrationTransaction");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.HRM.Costcenter", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Costcenter");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.HRM.Costunit", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Costunit");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.HRM.Department", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Costcenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostcenterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.HRM.DivisionClass", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClassNameCustomer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("ClassNameDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ClassNameID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DescriptionTermID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SequenceNr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("ID");

                    b.ToTable("DivisionClass");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.HRM.DivisionClassName", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Customer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DescriptionTermID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SequenceNr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("ID");

                    b.ToTable("DivisionClassName");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.HRM.DivisionClassValue", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Class_01_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Class_02_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Class_03_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Class_04_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Class_05_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Customer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("DivisionClassValue");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.HRM.JobGroup", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("JobGroup");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.HRM.JobTitle", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<string>("JobCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("JobGroup")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("JobGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobGroupDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("JobLevelFrom")
                        .HasColumnType("int");

                    b.Property<int?>("JobLevelTo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("JobTitle");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.HRM.LeaveBuildUpRegistration", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid>("Employee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("EmployeeFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeHID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double>("Hours")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid>("LeaveType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("LeaveTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaveTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.HasKey("ID");

                    b.ToTable("LeaveBuildUpRegistration");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.HRM.LeaveRegistration", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid>("Employee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("EmployeeFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeHID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("EndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Hours")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("HoursFirstDay")
                        .HasColumnType("float");

                    b.Property<double?>("HoursLastDay")
                        .HasColumnType("float");

                    b.Property<Guid>("LeaveType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("LeaveTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeaveTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<short>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.HasKey("ID");

                    b.ToTable("LeaveRegistration");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.HRM.Schedule", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte?>("Active")
                        .HasColumnType("tinyint");

                    b.Property<double?>("AverageHours")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Days")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Employment")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("EmploymentHID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Hours")
                        .HasColumnType("float");

                    b.Property<double?>("LeaveHoursCompensation")
                        .HasColumnType("float");

                    b.Property<byte?>("Main")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PaymentParttimeFactor")
                        .HasColumnType("float");

                    b.Property<int?>("ScheduleType")
                        .HasColumnType("int");

                    b.Property<string>("ScheduleTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StartWeek")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Inventory.AssemblyOrder", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AssemblyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double>("FinishedQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid>("Item")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("OrderStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double>("PlannedQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid?>("StorageLocation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StorageLocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageLocationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AssemblyOrder");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Inventory.BatchNumber", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("AvailableQuantity")
                        .HasColumnType("float");

                    b.Property<string>("BatchNumberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("IsBlocked")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("BatchNumber");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Inventory.ItemWarehouse", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CurrentStock")
                        .HasColumnType("float");

                    b.Property<Guid?>("DefaultStorageLocation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DefaultStorageLocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultStorageLocationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemBarcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ItemIsFractionAllowedItem")
                        .HasColumnType("bit");

                    b.Property<string>("ItemUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemUnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("MaximumStock")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PlannedStockIn")
                        .HasColumnType("float");

                    b.Property<double?>("PlannedStockOut")
                        .HasColumnType("float");

                    b.Property<string>("PlanningDetailsUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ProjectedStock")
                        .HasColumnType("float");

                    b.Property<double?>("ReorderPoint")
                        .HasColumnType("float");

                    b.Property<double?>("ReservedStock")
                        .HasColumnType("float");

                    b.Property<double?>("SafetyStock")
                        .HasColumnType("float");

                    b.Property<string>("StorageLocationUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ItemWarehouse");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Inventory.ItemWarehousePlanningDetail", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Item")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PlannedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<double>("PlannedQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("PlanningSourceDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PlanningSourceID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("PlanningSourceLineNumber")
                        .HasColumnType("int");

                    b.Property<int?>("PlanningSourceNumber")
                        .HasColumnType("int");

                    b.Property<string>("PlanningSourceUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlanningType")
                        .HasColumnType("int");

                    b.Property<string>("PlanningTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Warehouse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ItemWarehousePlanningDetail");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Inventory.ItemWarehouseStorageLocation", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("IsFractionAllowedItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<Guid>("Item")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("ItemBarcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemUnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Stock")
                        .HasColumnType("float");

                    b.Property<Guid?>("StorageLocation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StorageLocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageLocationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ItemWarehouseStorageLocation");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Inventory.SerialNumber", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte?>("Available")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("IsBlocked")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("StorageLocation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StorageLocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageLocationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SerialNumber");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Inventory.StockBatchNumber", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BatchNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("BatchNumberID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("DraftStockTransactionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("IsBlocked")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsDraft")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StockCountLine")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StockTransactionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("StockTransactionType")
                        .HasColumnType("int");

                    b.Property<Guid?>("StorageLocation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StorageLocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageLocationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("StockBatchNumber");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Inventory.StockCount", b =>
                {
                    b.Property<Guid>("StockCountID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<int?>("EntryNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OffsetGLInventory")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OffsetGLInventoryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OffsetGLInventoryDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Source")
                        .HasColumnType("smallint");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("StockCountDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StockCountNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StockCountID");

                    b.ToTable("StockCount");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Inventory.StockCountLine", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("CostPrice")
                        .HasColumnType("float");

                    b.Property<Guid?>("CountedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemBarcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ItemCostPrice")
                        .HasColumnType("float");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ItemDivisable")
                        .HasColumnType("bit");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("QuantityDifference")
                        .HasColumnType("float");

                    b.Property<double?>("QuantityInStock")
                        .HasColumnType("float");

                    b.Property<double?>("QuantityNew")
                        .HasColumnType("float");

                    b.Property<short?>("Source")
                        .HasColumnType("smallint");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("StockCountID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StockKeepingUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StorageLocation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StorageLocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageLocationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("StockCountLine");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Inventory.StockSerialNumber", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("DraftStockTransactionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("IsBlocked")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsDraft")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SerialNumberID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("StockCountLine")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StockTransactionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("StockTransactionType")
                        .HasColumnType("int");

                    b.Property<Guid?>("StorageLocation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StorageLocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageLocationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("StockSerialNumber");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Inventory.StorageLocation", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<byte?>("Main")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("StorageLocation");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Inventory.Warehouse", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DefaultStorageLocation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DefaultStorageLocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultStorageLocationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Main")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<Guid?>("ManagerUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("UseStorageLocations")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.HasKey("ID");

                    b.ToTable("Warehouse");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Inventory.WarehouseTransfer", b =>
                {
                    b.Property<Guid>("TransferID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PlannedDeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlannedReceiptDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Source")
                        .HasColumnType("smallint");

                    b.Property<short>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.Property<DateTime?>("TransferDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TransferNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("WarehouseFrom")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseFromCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseFromDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("WarehouseTo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseToCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseToDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransferID");

                    b.ToTable("WarehouseTransfer");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Inventory.WarehouseTransferLine", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<Guid?>("StorageLocationFrom")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StorageLocationFromCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageLocationFromDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("StorageLocationTo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StorageLocationToCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageLocationToDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TransferID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UnitCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("WarehouseTransferLine");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Logistics.Item", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class_01")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class_02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class_03")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class_04")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class_05")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class_06")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class_07")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class_08")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class_09")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class_10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("CopyRemarks")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<string>("CostPriceCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CostPriceNew")
                        .HasColumnType("float");

                    b.Property<double?>("CostPriceStandard")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("FreeBoolField_01")
                        .HasColumnType("bit");

                    b.Property<bool?>("FreeBoolField_02")
                        .HasColumnType("bit");

                    b.Property<bool?>("FreeBoolField_03")
                        .HasColumnType("bit");

                    b.Property<bool?>("FreeBoolField_04")
                        .HasColumnType("bit");

                    b.Property<bool?>("FreeBoolField_05")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FreeDateField_01")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FreeDateField_02")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FreeDateField_03")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FreeDateField_04")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FreeDateField_05")
                        .HasColumnType("datetime2");

                    b.Property<double?>("FreeNumberField_01")
                        .HasColumnType("float");

                    b.Property<double?>("FreeNumberField_02")
                        .HasColumnType("float");

                    b.Property<double?>("FreeNumberField_03")
                        .HasColumnType("float");

                    b.Property<double?>("FreeNumberField_04")
                        .HasColumnType("float");

                    b.Property<double?>("FreeNumberField_05")
                        .HasColumnType("float");

                    b.Property<double?>("FreeNumberField_06")
                        .HasColumnType("float");

                    b.Property<double?>("FreeNumberField_07")
                        .HasColumnType("float");

                    b.Property<double?>("FreeNumberField_08")
                        .HasColumnType("float");

                    b.Property<string>("FreeTextField_01")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeTextField_02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeTextField_03")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeTextField_04")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeTextField_05")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeTextField_06")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeTextField_07")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeTextField_08")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeTextField_09")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeTextField_10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GLCosts")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLCostsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLCostsDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GLRevenue")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLRevenueCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLRevenueDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GLStock")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLStockCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLStockDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("GrossWeight")
                        .HasColumnType("float");

                    b.Property<byte>("IsBatchItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<bool?>("IsFractionAllowedItem")
                        .HasColumnType("bit");

                    b.Property<byte>("IsMakeItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("IsNewContract")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("IsOnDemandItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<bool?>("IsPackageItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPurchaseItem")
                        .HasColumnType("bit");

                    b.Property<byte>("IsRegistrationCodeItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<bool?>("IsSalesItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSerialItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsStockItem")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsSubcontractedItem")
                        .HasColumnType("bit");

                    b.Property<byte?>("IsTaxableItem")
                        .HasColumnType("tinyint");

                    b.Property<byte>("IsTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("IsWebshopItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<Guid?>("ItemGroup")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemGroupDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("NetWeight")
                        .HasColumnType("float");

                    b.Property<string>("NetWeightUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesVatCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesVatCodeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SecurityLevel")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Stock")
                        .HasColumnType("float");

                    b.Property<long>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Logistics.ItemAssortment", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("ID");

                    b.ToTable("ItemAssortment");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Logistics.ItemAssortmentProperty", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ItemAssortmentCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("ID");

                    b.ToTable("ItemAssortmentProperty");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Logistics.ItemGroup", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("GLCosts")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLCostsCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLCostsDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GLPurchaseAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLPurchaseAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLPurchaseAccountDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GLPurchasePriceDifference")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLPurchasePriceDifferenceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLPurchasePriceDifferenceDescr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GLRevenue")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLRevenueCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLRevenueDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GLStock")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLStockCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLStockDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GLStockVariance")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLStockVarianceCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLStockVarianceDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ItemGroup");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Logistics.ItemVersion", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("BatchQuantity")
                        .HasColumnType("float");

                    b.Property<double?>("CalculatedCostPrice")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<byte>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<Guid>("Item")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LeadTime")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint");

                    b.Property<string>("TypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VersionNumber")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("ItemVersion");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Logistics.SalesItemPrice", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultItemUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DefaultItemUnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("NumberOfItemsPerUnit")
                        .HasColumnType("float");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<long>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SalesItemPrice");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Logistics.SupplierItem", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("CopyRemarks")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<string>("CountryOfOrigin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryOfOriginDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<byte?>("DropShipment")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("MainSupplier")
                        .HasColumnType("bit");

                    b.Property<double?>("MinimumQuantity")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PurchaseLeadTime")
                        .HasColumnType("int");

                    b.Property<double?>("PurchasePrice")
                        .HasColumnType("float");

                    b.Property<string>("PurchaseUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseUnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PurchaseUnitFactor")
                        .HasColumnType("float");

                    b.Property<string>("PurchaseVATCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseVATCodeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Supplier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SupplierCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SupplierItem");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Logistics.Unit", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<byte?>("Main")
                        .HasColumnType("tinyint");

                    b.Property<string>("TimeUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Mailbox.DefaultMailbox", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ForDivision")
                        .HasColumnType("int");

                    b.Property<bool>("IsScanServiceMailbox")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Mailbox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("DefaultMailbox");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Mailbox.MailMessageAttachment", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Attachment")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("AttachmentFileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttachmentFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSize")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<Guid>("MailMessageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<Guid?>("RecipientAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SenderAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("TypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("MailMessageAttachment");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Mailbox.MailMessagesReceived", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Bank")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ForDivision")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Operation")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("OriginalMessage")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OriginalMessageSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PartnerKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<Guid?>("RecipientAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("RecipientDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<string>("RecipientMailbox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipientMailboxDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RecipientMailboxID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short?>("RecipientStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("RecipientStatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SenderAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("SenderDateSent")
                        .HasColumnType("datetime2");

                    b.Property<byte>("SenderDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<string>("SenderIPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderMailbox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderMailboxDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SenderMailboxID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SynchronizationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("MailMessagesReceived");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Mailbox.MailMessagesSent", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Bank")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BankAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ForDivision")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Operation")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("OriginalMessage")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OriginalMessageSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PartnerKey")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<Guid?>("RecipientAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("RecipientDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<string>("RecipientMailbox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipientMailboxDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RecipientMailboxID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short?>("RecipientStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("RecipientStatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SenderAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("SenderDateSent")
                        .HasColumnType("datetime2");

                    b.Property<byte>("SenderDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<string>("SenderIPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderMailbox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderMailboxDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SenderMailboxID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SynchronizationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("MailMessagesSent");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Mailbox.Mailbox", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ForDivision")
                        .HasColumnType("int");

                    b.Property<string>("ForDivisionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailboxName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Publish")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<short?>("Type")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Mailbox");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Mailbox.PreferredMailbox", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ForDivision")
                        .HasColumnType("int");

                    b.Property<bool>("IsScanServiceMailbox")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Mailbox")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ValidFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidTo")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("PreferredMailbox");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Manufacturing.BillOfMaterialMaterial", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("AverageCost")
                        .HasColumnType("float");

                    b.Property<byte?>("Backflush")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CalculatorType")
                        .HasColumnType("int");

                    b.Property<double?>("CostBatch")
                        .HasColumnType("float");

                    b.Property<string>("CostCenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailDrawing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("ItemVersion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("int");

                    b.Property<double?>("NetWeight")
                        .HasColumnType("float");

                    b.Property<string>("NetWeightUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PartItem")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PartItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PartItemCostPriceStandard")
                        .HasColumnType("float");

                    b.Property<string>("PartItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<double?>("QuantityBatch")
                        .HasColumnType("float");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("syscreated")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("syscreator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("sysmodified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("sysmodifier")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("BillOfMaterialMaterial");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Manufacturing.BillOfMaterialVersion", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("BatchQuantity")
                        .HasColumnType("float");

                    b.Property<string>("CadDrawingUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CalculatedCostPrice")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<byte>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<Guid>("Item")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderLeadDays")
                        .HasColumnType("int");

                    b.Property<int?>("ProductionLeadDays")
                        .HasColumnType("int");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint");

                    b.Property<string>("TypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VersionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("VersionNumber")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("BillOfMaterialVersion");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Manufacturing.ByProductReceipt", b =>
                {
                    b.Property<Guid>("StockTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DraftStockTransactionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasReversibleQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsBackflush")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<byte?>("IsBatch")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsFractionAllowedItem")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsSerial")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemPictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<Guid?>("ShopOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ShopOrderMaterialPlan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ShopOrderNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("StorageLocation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StorageLocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageLocationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StockTransactionId");

                    b.ToTable("ByProductReceipt");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Manufacturing.ByProductReversal", b =>
                {
                    b.Property<Guid>("ReversalStockTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBackflush")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<byte?>("IsBatch")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsFractionAllowedItem")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsSerial")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemPictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OriginalStockTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<Guid?>("ShopOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ShopOrderMaterialPlan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ShopOrderNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("StorageLocation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StorageLocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageLocationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReversalStockTransactionId");

                    b.ToTable("ByProductReversal");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Manufacturing.ManufacturingSetting", b =>
                {
                    b.Property<int>("Division")
                        .HasColumnType("int");

                    b.Property<int>("InventoryMainMethod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("InventorySubMethod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<byte>("NegativeStockIsAllowed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("SerialNumbersAreMandatory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("ShowBackflushMaterials")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("ShowSubOrderMaterials")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.HasKey("Division");

                    b.ToTable("ManufacturingSetting");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Manufacturing.MaterialIssue", b =>
                {
                    b.Property<Guid>("StockTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DraftStockTransactionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasReversibleQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<byte?>("IsBackflush")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsBatch")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsFractionAllowedItem")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsIssueFromChild")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsSerial")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemPictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<Guid?>("RelatedStockTransaction")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ShopOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ShopOrderMaterialPlan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ShopOrderNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("StorageLocation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StorageLocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageLocationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StockTransactionId");

                    b.ToTable("MaterialIssue");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Manufacturing.MaterialReversal", b =>
                {
                    b.Property<Guid>("ReversalStockTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBackflush")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<byte?>("IsBatch")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsFractionAllowedItem")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsSerial")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemPictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OriginalStockTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<Guid?>("ShopOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ShopOrderMaterialPlan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ShopOrderNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("StorageLocation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StorageLocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageLocationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReversalStockTransactionId");

                    b.ToTable("MaterialReversal");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Manufacturing.Operation", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<byte?>("HasSuppliers")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Searchcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Operation");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Manufacturing.OperationResource", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("AttendedPercentage")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<double?>("EfficiencyPercentage")
                        .HasColumnType("float");

                    b.Property<byte?>("IsPrimary")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Operation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OperationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PurchaseLeadDays")
                        .HasColumnType("int");

                    b.Property<string>("PurchaseUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchaseVATCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Run")
                        .HasColumnType("float");

                    b.Property<int?>("RunMethod")
                        .HasColumnType("int");

                    b.Property<double?>("Setup")
                        .HasColumnType("float");

                    b.Property<string>("SetupUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<Guid?>("Workcenter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WorkcenterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("OperationResource");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Manufacturing.ProductionArea", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Costcenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostcenterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Costunit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostunitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<byte>("IsDefault")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ProductionArea");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Manufacturing.RecentTimeTransaction", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerCount")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("DataType")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Employee")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<short?>("HourStatus")
                        .HasColumnType("smallint");

                    b.Property<byte?>("IsFractionAllowedItem")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsOperationFinished")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemPictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("LaborHours")
                        .HasColumnType("float");

                    b.Property<double?>("MachineHours")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Operation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OperationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PercentComplete")
                        .HasColumnType("float");

                    b.Property<double?>("ProducedQuantity")
                        .HasColumnType("float");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SalesOrderCount")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOrderLineNumber")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOrderNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("ShopOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShopOrderDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShopOrderNumber")
                        .HasColumnType("int");

                    b.Property<double?>("ShopOrderPlannedQuantity")
                        .HasColumnType("float");

                    b.Property<Guid?>("ShopOrderRoutingStepPlan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ShopOrderRoutingStepPlanAttendedPercentage")
                        .HasColumnType("float");

                    b.Property<string>("ShopOrderRoutingStepPlanDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Workcenter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WorkcenterCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("RecentTimeTransaction");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Manufacturing.ShopOrder", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CADDrawingURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Costcenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostcenterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Costunit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostunitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("IsBatch")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("IsFractionAllowedItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("IsInPlanning")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("IsOnHold")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("IsReleased")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("IsSerial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemPictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ItemVersion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemVersionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PlannedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("PlannedQuantity")
                        .HasColumnType("float");

                    b.Property<DateTime?>("PlannedStartDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ProducedQuantity")
                        .HasColumnType("float");

                    b.Property<int>("ProductionLeadDays")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ReadyToShipQuantity")
                        .HasColumnType("float");

                    b.Property<int>("SalesOrderLineCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ShopOrderByProductPlanBackflushCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ShopOrderByProductPlanCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("ShopOrderMain")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ShopOrderMainNumber")
                        .HasColumnType("int");

                    b.Property<int>("ShopOrderMaterialPlanBackflushCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ShopOrderMaterialPlanCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("ShopOrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("ShopOrderNumberString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ShopOrderParent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ShopOrderParentNumber")
                        .HasColumnType("int");

                    b.Property<int>("ShopOrderRoutingStepPlanCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SubShopOrderCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("YourRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ShopOrder");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Manufacturing.ShopOrderMaterialPlan", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte?>("Backflush")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CalculatorType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailDrawing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemPictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PlannedAmountFC")
                        .HasColumnType("float");

                    b.Property<DateTime?>("PlannedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("PlannedPriceFC")
                        .HasColumnType("float");

                    b.Property<double?>("PlannedQuantity")
                        .HasColumnType("float");

                    b.Property<double?>("PlannedQuantityFactor")
                        .HasColumnType("float");

                    b.Property<Guid?>("ShopOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ShopOrderMaterialPlan");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Manufacturing.ShopOrderMaterialPlanDetail", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte?>("Backflush")
                        .HasColumnType("tinyint");

                    b.Property<int?>("CalculatorType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailDrawing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<byte?>("IsBatch")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsFractionAllowedItem")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsSerial")
                        .HasColumnType("tinyint");

                    b.Property<double?>("IssuedQuantity")
                        .HasColumnType("float");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemPictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PlannedAmountFC")
                        .HasColumnType("float");

                    b.Property<DateTime?>("PlannedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("PlannedIn")
                        .HasColumnType("float");

                    b.Property<double?>("PlannedOut")
                        .HasColumnType("float");

                    b.Property<double?>("PlannedPriceFC")
                        .HasColumnType("float");

                    b.Property<double?>("PlannedQuantity")
                        .HasColumnType("float");

                    b.Property<double?>("PlannedQuantityFactor")
                        .HasColumnType("float");

                    b.Property<double?>("RemainingQuantity")
                        .HasColumnType("float");

                    b.Property<Guid?>("ShopOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ShopOrderNumber")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Stock")
                        .HasColumnType("float");

                    b.Property<Guid?>("SubShopOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SubShopOrderNumber")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("ShopOrderMaterialPlanDetail");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Manufacturing.ShopOrderReceipt", b =>
                {
                    b.Property<Guid>("StockTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DraftStockTransactionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasReversibleQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<byte?>("IsBatch")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsFractionAllowedItem")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsIssueToParent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<byte?>("IsSerial")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemPictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ParentShopOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ParentShopOrderNumber")
                        .HasColumnType("int");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<Guid?>("RelatedStockTransaction")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ShopOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ShopOrderNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("StorageLocation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StorageLocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageLocationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StockTransactionId");

                    b.ToTable("ShopOrderReceipt");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Manufacturing.ShopOrderReversal", b =>
                {
                    b.Property<Guid>("ReversalStockTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("IsBatch")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsFractionAllowedItem")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsSerial")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemPictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OriginalStockTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<Guid?>("ShopOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ShopOrderNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("StorageLocation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StorageLocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageLocationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReversalStockTransactionId");

                    b.ToTable("ShopOrderReversal");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Manufacturing.ShopOrderRoutingStepPlan", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("AttendedPercentage")
                        .HasColumnType("float");

                    b.Property<byte?>("Backflush")
                        .HasColumnType("tinyint");

                    b.Property<double?>("CostPerItem")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<double?>("EfficiencyPercentage")
                        .HasColumnType("float");

                    b.Property<int?>("FactorType")
                        .HasColumnType("int");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Operation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OperationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OperationResource")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("PlannedEndDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("PlannedRunHours")
                        .HasColumnType("float");

                    b.Property<double?>("PlannedSetupHours")
                        .HasColumnType("float");

                    b.Property<DateTime?>("PlannedStartDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("PlannedTotalHours")
                        .HasColumnType("float");

                    b.Property<string>("PurchaseUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PurchaseUnitFactor")
                        .HasColumnType("float");

                    b.Property<double?>("PurchaseUnitPriceFC")
                        .HasColumnType("float");

                    b.Property<double?>("PurchaseUnitQuantity")
                        .HasColumnType("float");

                    b.Property<int?>("RoutingStepType")
                        .HasColumnType("int");

                    b.Property<double?>("Run")
                        .HasColumnType("float");

                    b.Property<int?>("RunMethod")
                        .HasColumnType("int");

                    b.Property<string>("RunMethodDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Setup")
                        .HasColumnType("float");

                    b.Property<string>("SetupUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ShopOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubcontractedLeadDays")
                        .HasColumnType("int");

                    b.Property<double?>("TotalCostDC")
                        .HasColumnType("float");

                    b.Property<Guid?>("Workcenter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WorkcenterCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkcenterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ShopOrderRoutingStepPlan");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Manufacturing.StageForDeliveryReceipt", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HasReversibleQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<byte>("IsBatch")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("IsFractionAllowedItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("IsSerial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemPictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<Guid?>("RelatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ShopOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<int?>("ShopOrderNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StageForDeliveryReceipt");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Manufacturing.StageForDeliveryReversal", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("IsBatch")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("IsFractionAllowedItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<byte>("IsSerial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemPictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<Guid?>("RelatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ShopOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ShopOrderNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StageForDeliveryReversal");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Manufacturing.StartedTimedTimeTransaction", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerCount")
                        .HasColumnType("int");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("DataType")
                        .HasColumnType("smallint");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Employee")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsFractionAllowedItem")
                        .HasColumnType("bit");

                    b.Property<byte?>("IsOperationFinished")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemPictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("LaborHours")
                        .HasColumnType("float");

                    b.Property<double?>("MachineHours")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Operation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OperationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PercentComplete")
                        .HasColumnType("float");

                    b.Property<double?>("ProducedQuantity")
                        .HasColumnType("float");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SalesOrderCount")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOrderLineNumber")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOrderNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("ShopOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShopOrderDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShopOrderNumber")
                        .HasColumnType("int");

                    b.Property<double?>("ShopOrderPlannedQuantity")
                        .HasColumnType("float");

                    b.Property<Guid?>("ShopOrderRoutingStepPlan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ShopOrderRoutingStepPlanAttendedPercentage")
                        .HasColumnType("float");

                    b.Property<string>("ShopOrderRoutingStepPlanDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Source")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Workcenter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WorkcenterCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkcenterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("StartedTimedTimeTransaction");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Manufacturing.SubOrderReceipt", b =>
                {
                    b.Property<Guid>("ShopOrderReceiptStockTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DraftStockTransactionID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasReversibleQuantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<byte?>("IsBatch")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsFractionAllowedItem")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsSerial")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemPictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MaterialIssueStockTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParentShopOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParentShopOrderMaterialPlan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ParentShopOrderNumber")
                        .HasColumnType("int");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<Guid?>("SubShopOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SubShopOrderNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShopOrderReceiptStockTransactionId");

                    b.ToTable("SubOrderReceipt");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Manufacturing.SubOrderReversal", b =>
                {
                    b.Property<Guid>("MaterialReversalStockTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedByFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("IsBatch")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsFractionAllowedItem")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("IsSerial")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemPictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OriginalMaterialIssueStockTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OriginalShopOrderReceiptStockTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParentShopOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ParentShopOrderNumber")
                        .HasColumnType("int");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<Guid?>("ShopOrderReversalStockTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SubShopOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SubShopOrderNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaterialReversalStockTransactionId");

                    b.ToTable("SubOrderReversal");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Manufacturing.TimedTimeTransaction", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Employee")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeeFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("IsOperationFinished")
                        .HasColumnType("tinyint");

                    b.Property<double?>("LaborHours")
                        .HasColumnType("float");

                    b.Property<double?>("MachineHours")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Operation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OperationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("PercentComplete")
                        .HasColumnType("float");

                    b.Property<double?>("ProducedQuantity")
                        .HasColumnType("float");

                    b.Property<Guid?>("ProductionArea")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductionAreaCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionAreaDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ShopOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShopOrderDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShopOrderNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("ShopOrderRoutingStepPlan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShopOrderRoutingStepPlanDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ShopOrderRoutingStepPlanRemainingRunHours")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("ShopOrderRoutingStepPlanRemainingSetupHours")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<int?>("Source")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<Guid?>("Workcenter")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WorkcenterCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkcenterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TimedTimeTransaction");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Manufacturing.Workcenter", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Costcenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostcenterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Costunit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostunitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<double?>("GeneralBurdenRate")
                        .HasColumnType("float");

                    b.Property<byte>("IsLaborBurdenPercent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<double?>("LaborBurdenRate")
                        .HasColumnType("float");

                    b.Property<double?>("MachineBurdenRate")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProductionArea")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("RunLaborRate")
                        .HasColumnType("float");

                    b.Property<string>("SearchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("SetupLaborRate")
                        .HasColumnType("float");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Workcenter");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.OpeningBalance.OpeningBalanceAfterEntry", b =>
                {
                    b.Property<int>("Division")
                        .HasColumnType("int");

                    b.Property<int>("ReportingYear")
                        .HasColumnType("int");

                    b.Property<Guid>("GLAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("BalanceSide")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Division", "ReportingYear", "GLAccount");

                    b.ToTable("OpeningBalanceAfterEntry");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.OpeningBalance.OpeningBalancePreviousYearAfterEntry", b =>
                {
                    b.Property<int>("Division")
                        .HasColumnType("int");

                    b.Property<int>("ReportingYear")
                        .HasColumnType("int");

                    b.Property<Guid>("GLAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("BalanceSide")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Division", "ReportingYear", "GLAccount");

                    b.ToTable("OpeningBalancePreviousYearAfterEntry");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.OpeningBalance.OpeningBalancePreviousYearProcessed", b =>
                {
                    b.Property<int>("Division")
                        .HasColumnType("int");

                    b.Property<int>("ReportingYear")
                        .HasColumnType("int");

                    b.Property<Guid>("GLAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("BalanceSide")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Division", "ReportingYear", "GLAccount");

                    b.ToTable("OpeningBalancePreviousYearProcessed");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.OpeningBalance.OpeningBalanceProcessed", b =>
                {
                    b.Property<int>("Division")
                        .HasColumnType("int");

                    b.Property<int>("ReportingYear")
                        .HasColumnType("int");

                    b.Property<Guid>("GLAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("BalanceSide")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Division", "ReportingYear", "GLAccount");

                    b.ToTable("OpeningBalanceProcessed");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Payroll.ActiveEmployment", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("AverageDaysPerWeek")
                        .HasColumnType("float");

                    b.Property<double?>("AverageHoursPerWeek")
                        .HasColumnType("float");

                    b.Property<Guid?>("Contract")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContractDocument")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ContractEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ContractProbationEndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ContractProbationPeriod")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ContractStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ContractType")
                        .HasColumnType("int");

                    b.Property<string>("ContractTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Department")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Employee")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeeFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeHID")
                        .HasColumnType("int");

                    b.Property<Guid?>("EmploymentOrganization")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HID")
                        .HasColumnType("int");

                    b.Property<double?>("HourlyWage")
                        .HasColumnType("float");

                    b.Property<double?>("InternalRate")
                        .HasColumnType("float");

                    b.Property<Guid?>("Jobtitle")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("JobtitleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReasonEnd")
                        .HasColumnType("int");

                    b.Property<string>("ReasonEndDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReasonEndFlex")
                        .HasColumnType("int");

                    b.Property<string>("ReasonEndFlexDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Salary")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Schedule")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("ScheduleAverageHours")
                        .HasColumnType("float");

                    b.Property<string>("ScheduleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ScheduleDays")
                        .HasColumnType("float");

                    b.Property<string>("ScheduleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ScheduleHours")
                        .HasColumnType("float");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDateOrganization")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("ActiveEmployment");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Payroll.Employee", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte?>("ActiveEmployment")
                        .HasColumnType("tinyint");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressStreetNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressStreetNumberSuffix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BirthName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthNamePrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BirthPlace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessFax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessPhoneExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CASONumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Customer")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeHID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HID")
                        .HasColumnType("int");

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<byte>("IsAnonymised")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Manager")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("MaritalDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("MaritalStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Municipality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("NameComposition")
                        .HasColumnType("smallint");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartnerNamePrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Person")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrivateEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialSecurityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("User")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserFullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Payroll.Employment", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Employee")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeeFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeHID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReasonEnd")
                        .HasColumnType("int");

                    b.Property<string>("ReasonEndDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReasonEndFlex")
                        .HasColumnType("int");

                    b.Property<string>("ReasonEndFlexDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDateOrganization")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Employment");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Payroll.EmploymentContract", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ContractFlexPhase")
                        .HasColumnType("int");

                    b.Property<string>("ContractFlexPhaseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Employee")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeeFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeHID")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeType")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Employment")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("EmploymentHID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ProbationEndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProbationPeriod")
                        .HasColumnType("int");

                    b.Property<int?>("ReasonContract")
                        .HasColumnType("int");

                    b.Property<string>("ReasonContractDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("TypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("EmploymentContract");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Payroll.EmploymentContractFlexPhase", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("EmploymentContractFlexPhase");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Payroll.EmploymentEndReason", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("EmploymentEndReason");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Payroll.EmploymentOrganization", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CostCenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Department")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DepartmentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Employee")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeeFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeHID")
                        .HasColumnType("int");

                    b.Property<Guid?>("Employment")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("EmploymentHID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("JobTitle")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("JobTitleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("EmploymentOrganization");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Payroll.EmploymentSalary", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("AverageDaysPerWeek")
                        .HasColumnType("float");

                    b.Property<double?>("AverageHoursPerWeek")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Employee")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeeFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeHID")
                        .HasColumnType("int");

                    b.Property<Guid?>("Employment")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("EmploymentHID")
                        .HasColumnType("int");

                    b.Property<int?>("EmploymentSalaryType")
                        .HasColumnType("int");

                    b.Property<string>("EmploymentSalaryTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("FulltimeAmount")
                        .HasColumnType("float");

                    b.Property<double?>("HourlyWage")
                        .HasColumnType("float");

                    b.Property<double?>("InternalRate")
                        .HasColumnType("float");

                    b.Property<int?>("JobLevel")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ParttimeAmount")
                        .HasColumnType("float");

                    b.Property<double?>("ParttimeFactor")
                        .HasColumnType("float");

                    b.Property<string>("Scale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Schedule")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ScheduleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScheduleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("EmploymentSalary");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Payroll.TaxEmploymentEndFlexCode", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("TaxEmploymentEndFlexCode");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.CostTransaction", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<double?>("AmountFC")
                        .HasColumnType("float");

                    b.Property<Guid?>("Attachment")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<string>("DivisionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Employee")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("EntryNumber")
                        .HasColumnType("int");

                    b.Property<string>("ErrorText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Expense")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExpenseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("HourStatus")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ItemDivisable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<double?>("PriceFC")
                        .HasColumnType("float");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<bool>("SkipValidation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("Subscription")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SubscriptionAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubscriptionAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriptionAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriptionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubscriptionNumber")
                        .HasColumnType("int");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("ID");

                    b.ToTable("CostTransaction");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.EmploymentInternalRate", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("Employee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("EmployeeFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeHID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("Employment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<int>("EmploymentHID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("InternalRate")
                        .HasColumnType("float");

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.HasKey("ID");

                    b.ToTable("EmploymentInternalRate");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.HourCostType", b =>
                {
                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemId");

                    b.ToTable("HourCostType");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.InvoiceTerm", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Deliverable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExecutionFromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExecutionToDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Percentage")
                        .HasColumnType("float");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VATCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VATCodeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("VATPercentage")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("InvoiceTerm");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.Project", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AccountContact")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("AllowAdditionalInvoicing")
                        .HasColumnType("bit");

                    b.Property<bool?>("BlockEntry")
                        .HasColumnType("bit");

                    b.Property<bool?>("BlockRebilling")
                        .HasColumnType("bit");

                    b.Property<byte?>("BudgetOverrunHours")
                        .HasColumnType("tinyint");

                    b.Property<short?>("BudgetType")
                        .HasColumnType("smallint");

                    b.Property<string>("BudgetTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("BudgetedAmount")
                        .HasColumnType("float");

                    b.Property<double?>("BudgetedCosts")
                        .HasColumnType("float");

                    b.Property<double?>("BudgetedRevenue")
                        .HasColumnType("float");

                    b.Property<Guid?>("Classification")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassificationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CostsAmountFC")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPOnumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<string>("DivisionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("FixedPriceItem")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FixedPriceItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternalNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InvoiceAsQuoted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("Manager")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ManagerFullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("MarkupPercentage")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PrepaidItem")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PrepaidItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("PrepaidType")
                        .HasColumnType("smallint");

                    b.Property<string>("PrepaidTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("SalesTimeQuantity")
                        .HasColumnType("float");

                    b.Property<Guid?>("SourceQuotation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("TimeQuantityToAlert")
                        .HasColumnType("float");

                    b.Property<long>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("TypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("UseBillingMilestones")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.ProjectBudgetType", b =>
                {
                    b.Property<short>("ID")
                        .HasColumnType("smallint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ProjectBudgetType");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.ProjectHourBudget", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Budget")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Project")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ProjectHourBudget");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.ProjectPlanning", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("BGTStatus")
                        .HasColumnType("smallint");

                    b.Property<short?>("CommunicationErrorStatus")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Employee")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeHID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("HourType")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HourTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HourTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Hours")
                        .HasColumnType("float");

                    b.Property<bool?>("IsBrokenRecurrence")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OverAllocate")
                        .HasColumnType("bit");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProjectPlanningRecurring")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectWBS")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectWBSDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("ID");

                    b.ToTable("ProjectPlanning");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.ProjectPlanningRecurring", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("BGTStatus")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DayOrThe")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Employee")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeHID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EndDateOrAfter")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("HourType")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("HourTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HourTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Hours")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("MonthPatternDay")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("MonthPatternOrdinalDay")
                        .HasColumnType("tinyint");

                    b.Property<byte?>("MonthPatternOrdinalWeek")
                        .HasColumnType("tinyint");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("NumberOfRecurrences")
                        .HasColumnType("smallint");

                    b.Property<bool?>("OverAllocate")
                        .HasColumnType("bit");

                    b.Property<byte?>("PatternFrequency")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("ProjectPlanningRecurringType")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("ProjectWBS")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectWBSDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<byte?>("WeekPatternDay")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("WeekPatternFriday")
                        .HasColumnType("bit");

                    b.Property<bool?>("WeekPatternMonday")
                        .HasColumnType("bit");

                    b.Property<bool?>("WeekPatternSaturday")
                        .HasColumnType("bit");

                    b.Property<bool?>("WeekPatternSunday")
                        .HasColumnType("bit");

                    b.Property<bool?>("WeekPatternThursday")
                        .HasColumnType("bit");

                    b.Property<bool?>("WeekPatternTuesday")
                        .HasColumnType("bit");

                    b.Property<bool?>("WeekPatternWednesday")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("ProjectPlanningRecurring");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.ProjectRestrictionEmployee", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Employee")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeeFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeHID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ProjectRestrictionEmployee");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.ProjectRestrictionItem", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("ItemIsTime")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ProjectRestrictionItem");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.ProjectRestrictionRebilling", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CostTypeRebill")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CostTypeRebillCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostTypeRebillDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ProjectRestrictionRebilling");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.RecentCost", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AmountApproved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("AmountDraft")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("AmountRejected")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("AmountSubmitted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("EntryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Expense")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExpenseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("QuantityApproved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("QuantityDraft")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("QuantityRejected")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("QuantitySubmitted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<int>("WeekNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("RecentCost");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.RecentHour", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Activity")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActivityDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("EntryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("HoursApproved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("HoursApprovedBillable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("HoursDraft")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("HoursDraftBillable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("HoursRejected")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("HoursRejectedBillable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("HoursSubmitted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("HoursSubmittedBillable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("WeekNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("RecentHour");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.TimeAndBillingAccountDetail", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TimeAndBillingAccountDetail");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.TimeAndBillingActivitiesAndExpense", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TimeAndBillingActivitiesAndExpense");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.TimeAndBillingEntryAccount", b =>
                {
                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountId");

                    b.ToTable("TimeAndBillingEntryAccount");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.TimeAndBillingEntryProject", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.ToTable("TimeAndBillingEntryProject");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.TimeAndBillingEntryRecentAccount", b =>
                {
                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateLastUsed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.HasKey("AccountId");

                    b.ToTable("TimeAndBillingEntryRecentAccount");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.TimeAndBillingEntryRecentActivitiesAndExpense", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateLastUsed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TimeAndBillingEntryRecentActivitiesAndExpense");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.TimeAndBillingEntryRecentHourCostType", b =>
                {
                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateLastUsed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemId");

                    b.ToTable("TimeAndBillingEntryRecentHourCostType");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.TimeAndBillingEntryRecentProject", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateLastUsed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.ToTable("TimeAndBillingEntryRecentProject");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.TimeAndBillingItemDetail", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsFractionAllowedItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsSalesItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("SalesCurrency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SalesPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.HasKey("ID");

                    b.ToTable("TimeAndBillingItemDetail");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.TimeAndBillingProjectDetail", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("ID");

                    b.ToTable("TimeAndBillingProjectDetail");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.TimeCorrection", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OriginalEntryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("TimeCorrection");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Project.TimeTransaction", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Activity")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActivityDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<double?>("AmountFC")
                        .HasColumnType("float");

                    b.Property<Guid?>("Attachment")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<string>("DivisionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Employee")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EntryNumber")
                        .HasColumnType("int");

                    b.Property<string>("ErrorText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("HourStatus")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ItemDivisable")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<double?>("PriceFC")
                        .HasColumnType("float");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<bool>("SkipValidation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Subscription")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SubscriptionAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubscriptionAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriptionAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriptionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubscriptionNumber")
                        .HasColumnType("int");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("ID");

                    b.ToTable("TimeTransaction");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Purchase.PurchaseInvoice", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid?>("ContactPerson")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EntryNumber")
                        .HasColumnType("int");

                    b.Property<double?>("ExchangeRate")
                        .HasColumnType("float");

                    b.Property<short?>("FinancialPeriod")
                        .HasColumnType("smallint");

                    b.Property<short?>("FinancialYear")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Journal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("PaymentCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Source")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.Property<short>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.Property<Guid?>("Supplier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.Property<double?>("VATAmount")
                        .HasColumnType("float");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("YourRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PurchaseInvoice");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Purchase.PurchaseInvoiceLine", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("CostCenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<Guid?>("InvoiceID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<double>("NetPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PurchaseOrderLine")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<double?>("QuantityInDefaultUnits")
                        .HasColumnType("float");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("UnitPrice")
                        .HasColumnType("float");

                    b.Property<double?>("VATAmount")
                        .HasColumnType("float");

                    b.Property<string>("VATCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("VATPercentage")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("PurchaseInvoiceLine");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.PurchaseEntry.PurchaseEntry", b =>
                {
                    b.Property<Guid>("EntryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AmountDC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("AmountFC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<int?>("BatchNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DocumentNumber")
                        .HasColumnType("int");

                    b.Property<string>("DocumentSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EntryNumber")
                        .HasColumnType("int");

                    b.Property<string>("ExternalLinkDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalLinkReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("GAccountAmountFC")
                        .HasColumnType("float");

                    b.Property<int?>("InvoiceNumber")
                        .HasColumnType("int");

                    b.Property<string>("Journal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JournalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("PaymentCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentConditionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessNumber")
                        .HasColumnType("int");

                    b.Property<double?>("Rate")
                        .HasColumnType("float");

                    b.Property<short?>("ReportingPeriod")
                        .HasColumnType("smallint");

                    b.Property<short?>("ReportingYear")
                        .HasColumnType("smallint");

                    b.Property<bool?>("Reversal")
                        .HasColumnType("bit");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Supplier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("TypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("VATAmountDC")
                        .HasColumnType("float");

                    b.Property<double?>("VATAmountFC")
                        .HasColumnType("float");

                    b.Property<string>("YourRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntryID");

                    b.ToTable("PurchaseEntry");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.PurchaseEntry.PurchaseEntryLine", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AmountDC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("AmountFC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid?>("Asset")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AssetDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("EntryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("From")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GLAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntraStatArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntraStatCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntraStatDeliveryTerm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntraStatTransactionA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntraStatTransportMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("StatisticalNetWeight")
                        .HasColumnType("float");

                    b.Property<string>("StatisticalNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("StatisticalQuantity")
                        .HasColumnType("float");

                    b.Property<double?>("StatisticalValue")
                        .HasColumnType("float");

                    b.Property<Guid?>("Subscription")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubscriptionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("To")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TrackingNumber")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TrackingNumberDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<double?>("VATAmountDC")
                        .HasColumnType("float");

                    b.Property<double?>("VATAmountFC")
                        .HasColumnType("float");

                    b.Property<double?>("VATBaseAmountDC")
                        .HasColumnType("float");

                    b.Property<double?>("VATBaseAmountFC")
                        .HasColumnType("float");

                    b.Property<string>("VATCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VATCodeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("VATNonDeductiblePercentage")
                        .HasColumnType("float");

                    b.Property<double?>("VATPercentage")
                        .HasColumnType("float");

                    b.Property<double?>("WithholdingAmountDC")
                        .HasColumnType("float");

                    b.Property<string>("WithholdingTax")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PurchaseEntryLine");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.PurchaseOrder.GoodsReceipt", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocumentSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EntryNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReceiptDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReceiptNumber")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Supplier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SupplierCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SupplierContact")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SupplierContactFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YourRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("GoodsReceipt");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.PurchaseOrder.GoodsReceiptLine", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("GoodsReceiptID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemUnitCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("Location")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PurchaseOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<Guid?>("PurchaseOrderLineID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PurchaseOrderNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double?>("QuantityOrdered")
                        .HasColumnType("float");

                    b.Property<double?>("QuantityReceived")
                        .HasColumnType("float");

                    b.Property<string>("SupplierItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("GoodsReceiptLine");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.PurchaseOrder.PurchaseOrder", b =>
                {
                    b.Property<Guid>("PurchaseOrderID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("AmountDC")
                        .HasColumnType("float");

                    b.Property<double?>("AmountFC")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeliveryAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeliveryAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeliveryAddress")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeliveryContact")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeliveryContactPersonFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocumentSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DropShipment")
                        .HasColumnType("bit");

                    b.Property<double?>("ExchangeRate")
                        .HasColumnType("float");

                    b.Property<int?>("InvoiceStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<int?>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<string>("PaymentCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentConditionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PurchaseAgent")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PurchaseAgentFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReceiptDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReceiptStatus")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SalesOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SalesOrderNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("ShippingMethod")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShippingMethodDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Source")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("Supplier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SupplierCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SupplierContact")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SupplierContactPersonFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("VATAmount")
                        .HasColumnType("float");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YourRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PurchaseOrderID");

                    b.ToTable("PurchaseOrder");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.PurchaseOrder.PurchaseOrderLine", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("AmountDC")
                        .HasColumnType("float");

                    b.Property<double?>("AmountFC")
                        .HasColumnType("float");

                    b.Property<string>("CostCenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Expense")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExpenseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("InStock")
                        .HasColumnType("float");

                    b.Property<double?>("InvoicedQuantity")
                        .HasColumnType("float");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ItemDivisable")
                        .HasColumnType("bit");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("NetPrice")
                        .HasColumnType("float");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ProjectedStock")
                        .HasColumnType("float");

                    b.Property<Guid>("PurchaseOrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<double?>("QuantityInPurchaseUnits")
                        .HasColumnType("float");

                    b.Property<bool?>("Rebill")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReceiptDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ReceivedQuantity")
                        .HasColumnType("float");

                    b.Property<Guid?>("SalesOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SalesOrderLine")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SalesOrderLineNumber")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("SupplierItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("UnitPrice")
                        .HasColumnType("float");

                    b.Property<double?>("VATAmount")
                        .HasColumnType("float");

                    b.Property<string>("VATCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VATDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("VATPercentage")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("PurchaseOrderLine");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Sales.SalesPriceList", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<short?>("Entity")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("ID");

                    b.ToTable("SalesPriceList");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Sales.SalesPriceListVolumeDiscount", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BasePrice")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("BasePriceAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<short>("EntryMethod")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ItemGroup")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemGroupDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("NewPrice")
                        .HasColumnType("float");

                    b.Property<double?>("NumberOfItemsPerUnit")
                        .HasColumnType("float");

                    b.Property<string>("PriceListCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PriceListDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PriceListPeriod")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<long>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SalesPriceListVolumeDiscount");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Sales.ShippingMethod", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingRatesURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrackingURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ShippingMethod");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.SalesEntry.SalesEntry", b =>
                {
                    b.Property<Guid>("EntryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AmountDC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("AmountFC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<int?>("BatchNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Customer")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DocumentNumber")
                        .HasColumnType("int");

                    b.Property<string>("DocumentSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EntryNumber")
                        .HasColumnType("int");

                    b.Property<string>("ExternalLinkDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalLinkReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("GAccountAmountFC")
                        .HasColumnType("float");

                    b.Property<int?>("InvoiceNumber")
                        .HasColumnType("int");

                    b.Property<bool?>("IsExtraDuty")
                        .HasColumnType("bit");

                    b.Property<string>("Journal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JournalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("PaymentCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentConditionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessNumber")
                        .HasColumnType("int");

                    b.Property<double?>("Rate")
                        .HasColumnType("float");

                    b.Property<short?>("ReportingPeriod")
                        .HasColumnType("smallint");

                    b.Property<short?>("ReportingYear")
                        .HasColumnType("smallint");

                    b.Property<bool>("Reversal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("TypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("VATAmountDC")
                        .HasColumnType("float");

                    b.Property<double?>("VATAmountFC")
                        .HasColumnType("float");

                    b.Property<double?>("WithholdingTaxAmountDC")
                        .HasColumnType("float");

                    b.Property<double?>("WithholdingTaxBaseAmount")
                        .HasColumnType("float");

                    b.Property<double?>("WithholdingTaxPercentage")
                        .HasColumnType("float");

                    b.Property<string>("YourRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntryID");

                    b.ToTable("SalesEntry");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.SalesEntry.SalesEntryLine", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AmountDC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("AmountFC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid?>("Asset")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AssetDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("EntryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<double?>("ExtraDutyAmountFC")
                        .HasColumnType("float");

                    b.Property<double?>("ExtraDutyPercentage")
                        .HasColumnType("float");

                    b.Property<DateTime?>("From")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("GLAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLAccountDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntraStatArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntraStatCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntraStatDeliveryTerm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntraStatTransactionA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntraStatTransportMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("StatisticalNetWeight")
                        .HasColumnType("float");

                    b.Property<string>("StatisticalNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("StatisticalQuantity")
                        .HasColumnType("float");

                    b.Property<double?>("StatisticalValue")
                        .HasColumnType("float");

                    b.Property<Guid?>("Subscription")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubscriptionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TaxSchedule")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("To")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TrackingNumber")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TrackingNumberDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<double?>("VATAmountDC")
                        .HasColumnType("float");

                    b.Property<double?>("VATAmountFC")
                        .HasColumnType("float");

                    b.Property<double?>("VATBaseAmountDC")
                        .HasColumnType("float");

                    b.Property<double?>("VATBaseAmountFC")
                        .HasColumnType("float");

                    b.Property<string>("VATCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VATCodeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("VATPercentage")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("SalesEntryLine");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.SalesInvoice.Layout", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("ID");

                    b.ToTable("Layout");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.SalesInvoice.SalesInvoice", b =>
                {
                    b.Property<Guid>("InvoiceID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("AmountDC")
                        .HasColumnType("float");

                    b.Property<double?>("AmountDiscount")
                        .HasColumnType("float");

                    b.Property<double?>("AmountDiscountExclVat")
                        .HasColumnType("float");

                    b.Property<double?>("AmountFC")
                        .HasColumnType("float");

                    b.Property<double?>("AmountFCExclVat")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeliverTo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeliverToAddress")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeliverToContactPerson")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeliverToContactPersonFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliverToName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<short?>("DiscountType")
                        .HasColumnType("smallint");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DocumentNumber")
                        .HasColumnType("int");

                    b.Property<string>("DocumentSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ExtraDutyAmountFC")
                        .HasColumnType("float");

                    b.Property<double?>("GAccountAmountFC")
                        .HasColumnType("float");

                    b.Property<DateTime?>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InvoiceNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("InvoiceTo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InvoiceToContactPerson")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InvoiceToContactPersonFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceToName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsExtraDuty")
                        .HasColumnType("bit");

                    b.Property<string>("Journal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JournalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("OrderedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderedByContactPerson")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OrderedByContactPersonFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentConditionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Salesperson")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SalespersonFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("StarterSalesInvoiceStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("StarterSalesInvoiceStatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TaxSchedule")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TaxScheduleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxScheduleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.Property<string>("TypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("VATAmountDC")
                        .HasColumnType("float");

                    b.Property<double?>("VATAmountFC")
                        .HasColumnType("float");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("WithholdingTaxAmountFC")
                        .HasColumnType("float");

                    b.Property<double?>("WithholdingTaxBaseAmount")
                        .HasColumnType("float");

                    b.Property<double?>("WithholdingTaxPercentage")
                        .HasColumnType("float");

                    b.Property<string>("YourRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvoiceID");

                    b.ToTable("SalesInvoice");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.SalesInvoice.SalesInvoiceLine", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("AmountDC")
                        .HasColumnType("float");

                    b.Property<double?>("AmountFC")
                        .HasColumnType("float");

                    b.Property<string>("CostCenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Employee")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeeFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<double?>("ExtraDutyAmountFC")
                        .HasColumnType("float");

                    b.Property<double?>("ExtraDutyPercentage")
                        .HasColumnType("float");

                    b.Property<Guid?>("GLAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLAccountDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("int");

                    b.Property<double?>("NetPrice")
                        .HasColumnType("float");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Pricelist")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PricelistDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProjectWBS")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectWBSDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<Guid?>("SalesOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SalesOrderLine")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SalesOrderLineNumber")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOrderNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Subscription")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SubscriptionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TaxSchedule")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TaxScheduleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxScheduleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("UnitPrice")
                        .HasColumnType("float");

                    b.Property<double?>("VATAmountDC")
                        .HasColumnType("float");

                    b.Property<double?>("VATAmountFC")
                        .HasColumnType("float");

                    b.Property<string>("VATCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VATCodeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("VATPercentage")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("SalesInvoiceLine");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.SalesOrder.GoodsDelivery", b =>
                {
                    b.Property<Guid>("EntryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeliveryAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeliveryAccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeliveryAddress")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeliveryContact")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeliveryContactPersonFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeliveryNumber")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocumentSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EntryNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ShippingMethod")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShippingMethodCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingMethodDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<string>("TrackingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Warehouse")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntryID");

                    b.ToTable("GoodsDelivery");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.SalesOrder.GoodsDeliveryLine", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<Guid?>("EntryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("QuantityDelivered")
                        .HasColumnType("float");

                    b.Property<double?>("QuantityOrdered")
                        .HasColumnType("float");

                    b.Property<Guid?>("SalesOrderLineID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SalesOrderLineNumber")
                        .HasColumnType("int");

                    b.Property<int?>("SalesOrderNumber")
                        .HasColumnType("int");

                    b.Property<Guid?>("StorageLocation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StorageLocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageLocationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<string>("TrackingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unitcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("GoodsDeliveryLine");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.SalesOrder.SalesOrder", b =>
                {
                    b.Property<Guid>("OrderID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AmountDC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("AmountDiscount")
                        .HasColumnType("float");

                    b.Property<double?>("AmountDiscountExclVat")
                        .HasColumnType("float");

                    b.Property<double>("AmountFC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("AmountFCExclVat")
                        .HasColumnType("float");

                    b.Property<short>("ApprovalStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.Property<string>("ApprovalStatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Approved")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Approver")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ApproverFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeliverTo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeliverToContactPerson")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeliverToContactPersonFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliverToName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeliveryAddress")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<short?>("DeliveryStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("DeliveryStatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("Document")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DocumentNumber")
                        .HasColumnType("int");

                    b.Property<string>("DocumentSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("InvoiceStatus")
                        .HasColumnType("smallint");

                    b.Property<string>("InvoiceStatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("InvoiceTo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InvoiceToContactPerson")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InvoiceToContactPersonFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceToName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("OrderedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderedByContactPerson")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OrderedByContactPersonFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentConditionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Salesperson")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SalespersonFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ShippingMethod")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShippingMethodDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<string>("StatusDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TaxSchedule")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TaxScheduleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxScheduleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("WarehouseID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("YourRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderID");

                    b.ToTable("SalesOrder");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.SalesOrder.SalesOrderLine", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AmountDC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("AmountFC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("CostCenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostCenterDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("CostPriceFC")
                        .HasColumnType("float");

                    b.Property<string>("CostUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostUnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ItemVersion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemVersionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<double?>("Margin")
                        .HasColumnType("float");

                    b.Property<double?>("NetPrice")
                        .HasColumnType("float");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<int>("OrderNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("Pricelist")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PricelistDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Project")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PurchaseOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PurchaseOrderLine")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("PurchaseOrderLineNumber")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseOrderNumber")
                        .HasColumnType("int");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float");

                    b.Property<double?>("QuantityDelivered")
                        .HasColumnType("float");

                    b.Property<double?>("QuantityInvoiced")
                        .HasColumnType("float");

                    b.Property<Guid?>("ShopOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UnitCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("UnitPrice")
                        .HasColumnType("float");

                    b.Property<byte>("UseDropShipment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.Property<double?>("VATAmount")
                        .HasColumnType("float");

                    b.Property<string>("VATCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VATCodeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("VATPercentage")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("SalesOrderLine");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Subscription.Subscription", b =>
                {
                    b.Property<Guid>("EntryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("BlockEntry")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CancellationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Classification")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassificationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassificationDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid>("Creator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPONumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<byte?>("InvoiceDay")
                        .HasColumnType("tinyint");

                    b.Property<Guid?>("InvoiceTo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InvoiceToContactPerson")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InvoiceToContactPersonFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceToName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InvoicedTo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InvoicingStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid>("Modifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("OrderedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OrderedByContactPerson")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OrderedByContactPersonFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentConditionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Printed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("ReasonCancelled")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReasonCancelledCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonCancelledDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid>("SubscriptionType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("SubscriptionTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriptionTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntryID");

                    b.ToTable("Subscription");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Subscription.SubscriptionLine", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AmountDC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("AmountFC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Costcenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Costunit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Discount")
                        .HasColumnType("float");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("EntryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<DateTime>("FromDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid>("Item")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<short?>("LineType")
                        .HasColumnType("smallint");

                    b.Property<string>("LineTypeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<double>("NetPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UnitCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnitDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("UnitPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("VATAmountFC")
                        .HasColumnType("float");

                    b.Property<string>("VATCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VATCodeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SubscriptionLine");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Subscription.SubscriptionLineType", b =>
                {
                    b.Property<short>("ID")
                        .HasColumnType("smallint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SubscriptionLineType");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Subscription.SubscriptionReasonCode", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid>("Creator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid>("Modifier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SubscriptionReasonCode");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Subscription.SubscriptionRestrictionEmployee", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("Employee")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeeFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeHID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Subscription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("SubscriptionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubscriptionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("ID");

                    b.ToTable("SubscriptionRestrictionEmployee");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Subscription.SubscriptionRestrictionItem", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid?>("Item")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Subscription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("SubscriptionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubscriptionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("ID");

                    b.ToTable("SubscriptionRestrictionItem");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Subscription.SubscriptionType", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("SubscriptionType");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Sync.Deleted", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("EntityKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<int>("EntityType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<long>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.HasKey("ID");

                    b.ToTable("Deleted");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.SystemBase.AccountantInfo", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAccountant")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<byte[]>("Logo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("MenuLogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AccountantInfo");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.SystemBase.AvailableFeature", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AvailableFeature");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.SystemBase.Division", b =>
                {
                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChamberOfCommerceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Current")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("Customer")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Hid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValue(0L);

                    b.Property<bool>("IsMainDivision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("Modified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("VATNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Division");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Users.User", b =>
                {
                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BirthName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Customer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasRegisteredForTwoStepVerification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("HasTwoStepVerification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StartDivision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserTypesList")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Users.UserRole", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("RoleLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Users.UserRolesPerDivision", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Division")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("RoleLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<Guid?>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("UserRolesPerDivision");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.VAT.VATCode", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Account")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("CalculationBasis")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Charged")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<string>("EUSalesListing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GLDiscountPurchase")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLDiscountPurchaseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLDiscountPurchaseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GLDiscountSales")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLDiscountSalesCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLDiscountSalesDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GLToClaim")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLToClaimCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLToClaimDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GLToPay")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GLToPayCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GLToPayDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IntraStat")
                        .HasColumnType("bit");

                    b.Property<string>("IntrastatType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<string>("LegalText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Percentage")
                        .HasColumnType("float");

                    b.Property<short?>("TaxReturnType")
                        .HasColumnType("smallint");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("VATPartialRatio")
                        .HasColumnType("smallint");

                    b.Property<string>("VATTransactionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VatDocType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("VatMargin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)0);

                    b.HasKey("ID");

                    b.ToTable("VATCode");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.VAT.VatPercentage", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LineNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Modifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ModifierFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Percentage")
                        .HasColumnType("float");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.Property<Guid>("VATCodeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.HasKey("ID");

                    b.ToTable("VatPercentage");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Webhooks.WebhookSubscription", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CallbackURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ClientID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Creator")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatorFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("WebhookSubscription");
                });

            modelBuilder.Entity("ExactOnline.Client.Models.Workflow.RequestAttachment", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Division")
                        .HasColumnType("int");

                    b.Property<string>("DownloadUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FileSize")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid?>("Request")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.ToTable("RequestAttachment");
                });
#pragma warning restore 612, 618
        }
    }
}
